{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";const orderSlice=createSlice({name:\"Order\",initialState:{orders:[],isFetching:false,isUpdating:false,error:false},reducers:{getOrderStart:state=>{state.isFetching=true;state.error=false;},getOrderSuccess:(state,action)=>{state.orders=action.payload;state.error=false;},getOrderFailure:state=>{state.isFetching=false;state.error=true;},updateOrderStart:state=>{state.isFetching=true;state.error=false;},updateOrderSuccess:(state,action)=>{state.isFetching=false;state.orders.splice(state.orders.findIndex(order=>order._id===action.payload.orderId),1);},updateOrderFailure:state=>{state.isFetching=false;state.error=true;}}});export const{getOrderStart,getOrderSuccess,getOrderFailure,updateOrderStart,updateOrderSuccess,updateOrderFailure}=orderSlice.actions;export default orderSlice.reducer;","map":{"version":3,"names":["createSlice","orderSlice","name","initialState","orders","isFetching","isUpdating","error","reducers","getOrderStart","state","getOrderSuccess","action","payload","getOrderFailure","updateOrderStart","updateOrderSuccess","splice","findIndex","order","_id","orderId","updateOrderFailure","actions","reducer"],"sources":["C:/Users/Abdu/OneDrive/Desktop/React/my-ecommerce/src/redux/orderRedux.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst orderSlice = createSlice({\r\n name:\"Order\",\r\n initialState: {\r\n  orders: [],\r\n  isFetching:false,\r\n  isUpdating: false,\r\n  error: false\r\n },\r\n reducers:{\r\n  getOrderStart: (state)=>{\r\n    state.isFetching = true;\r\n    state.error = false;\r\n  },\r\n  getOrderSuccess: (state,action)=>{\r\n    state.orders = action.payload;\r\n    state.error = false;\r\n  },\r\n  getOrderFailure: (state)=>{\r\n    state.isFetching = false;\r\n    state.error = true;\r\n  },\r\n  updateOrderStart: (state)=>{\r\n    state.isFetching = true;\r\n    state.error = false;\r\n  },\r\n  updateOrderSuccess: (state,action)=>{\r\n    state.isFetching = false;\r\n    state.orders.splice(state.orders.findIndex(order=>order._id === action.payload.orderId),1)\r\n  },\r\n  updateOrderFailure: (state)=>{\r\n    state.isFetching = false;\r\n    state.error = true;\r\n  }\r\n }\r\n\r\n});\r\n\r\nexport const {getOrderStart,getOrderSuccess,getOrderFailure,updateOrderStart,updateOrderSuccess,updateOrderFailure} = orderSlice.actions;\r\n\r\nexport default orderSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,UAAU,CAAGD,WAAW,CAAC,CAC9BE,IAAI,CAAC,OAAO,CACZC,YAAY,CAAE,CACbC,MAAM,CAAE,EAAE,CACVC,UAAU,CAAC,KAAK,CAChBC,UAAU,CAAE,KAAK,CACjBC,KAAK,CAAE,KACR,CAAC,CACDC,QAAQ,CAAC,CACRC,aAAa,CAAGC,KAAK,EAAG,CACtBA,KAAK,CAACL,UAAU,CAAG,IAAI,CACvBK,KAAK,CAACH,KAAK,CAAG,KAAK,CACrB,CAAC,CACDI,eAAe,CAAEA,CAACD,KAAK,CAACE,MAAM,GAAG,CAC/BF,KAAK,CAACN,MAAM,CAAGQ,MAAM,CAACC,OAAO,CAC7BH,KAAK,CAACH,KAAK,CAAG,KAAK,CACrB,CAAC,CACDO,eAAe,CAAGJ,KAAK,EAAG,CACxBA,KAAK,CAACL,UAAU,CAAG,KAAK,CACxBK,KAAK,CAACH,KAAK,CAAG,IAAI,CACpB,CAAC,CACDQ,gBAAgB,CAAGL,KAAK,EAAG,CACzBA,KAAK,CAACL,UAAU,CAAG,IAAI,CACvBK,KAAK,CAACH,KAAK,CAAG,KAAK,CACrB,CAAC,CACDS,kBAAkB,CAAEA,CAACN,KAAK,CAACE,MAAM,GAAG,CAClCF,KAAK,CAACL,UAAU,CAAG,KAAK,CACxBK,KAAK,CAACN,MAAM,CAACa,MAAM,CAACP,KAAK,CAACN,MAAM,CAACc,SAAS,CAACC,KAAK,EAAEA,KAAK,CAACC,GAAG,GAAKR,MAAM,CAACC,OAAO,CAACQ,OAAO,CAAC,CAAC,CAAC,CAAC,CAC5F,CAAC,CACDC,kBAAkB,CAAGZ,KAAK,EAAG,CAC3BA,KAAK,CAACL,UAAU,CAAG,KAAK,CACxBK,KAAK,CAACH,KAAK,CAAG,IAAI,CACpB,CACD,CAED,CAAC,CAAC,CAEF,MAAO,MAAM,CAACE,aAAa,CAACE,eAAe,CAACG,eAAe,CAACC,gBAAgB,CAACC,kBAAkB,CAACM,kBAAkB,CAAC,CAAGrB,UAAU,CAACsB,OAAO,CAExI,cAAe,CAAAtB,UAAU,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}