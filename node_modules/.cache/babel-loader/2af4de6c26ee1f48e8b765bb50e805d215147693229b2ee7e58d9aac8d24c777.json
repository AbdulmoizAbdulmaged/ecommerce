{"ast":null,"code":"import { publicRequest, userRequest } from \"../requestMethod\";\nimport { resetCart } from \"./cartRedux\";\nimport { getOrderFailure, getOrderStart, getOrderSuccess, updateOrderFailure, updateOrderStart } from \"./orderRedux\";\nimport { addCustomerFailure, addCustomerStart, addCustomerSuccessfull, loginFailure, loginStart, loginSuccess, signOutCustomer } from \"./userRedux\";\nexport const login = async (dispatch, customer) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post('/auth/signin', customer);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const addCustomer = async (dispatch, customer) => {\n  dispatch(addCustomerStart());\n  try {\n    const res = await publicRequest.post('auth/register', customer);\n    dispatch(addCustomerSuccessfull(res.data));\n  } catch (err) {\n    dispatch(addCustomerFailure());\n  }\n};\nexport const signOut = async dispatch => {\n  try {\n    dispatch(signOutCustomer());\n    window.location.href = '/';\n  } catch {}\n};\nexport const resetCustomerCart = async dispatch => {\n  try {\n    dispatch(resetCart());\n  } catch {}\n};\nexport const getOrders = async (dispatch, userId) => {\n  dispatch(getOrderStart());\n  try {\n    const res = await userRequest.get('orders/find/' + userId);\n    dispatch(getOrderSuccess(res.data));\n  } catch {\n    dispatch(getOrderFailure());\n  }\n};\nexport const updateOrder = async (id, order, dispatch) => {\n  dispatch(updateOrderStart());\n  try {\n    const res = await userRequest.post('', order);\n  } catch {\n    dispatch(updateOrderFailure());\n  }\n};","map":{"version":3,"names":["publicRequest","userRequest","resetCart","getOrderFailure","getOrderStart","getOrderSuccess","updateOrderFailure","updateOrderStart","addCustomerFailure","addCustomerStart","addCustomerSuccessfull","loginFailure","loginStart","loginSuccess","signOutCustomer","login","dispatch","customer","res","post","data","err","addCustomer","signOut","window","location","href","resetCustomerCart","getOrders","userId","get","updateOrder","id","order"],"sources":["C:/Users/Abdu/OneDrive/Desktop/React/my-ecommerce/src/redux/apiCalls.js"],"sourcesContent":["import { publicRequest, userRequest } from \"../requestMethod\";\r\nimport { resetCart } from \"./cartRedux\";\r\nimport { getOrderFailure, getOrderStart, getOrderSuccess, updateOrderFailure, updateOrderStart } from \"./orderRedux\";\r\nimport { addCustomerFailure, addCustomerStart, addCustomerSuccessfull, loginFailure, loginStart, loginSuccess, signOutCustomer } from \"./userRedux\"\r\n\r\nexport const login = async (dispatch,customer)=>{\r\n  dispatch(loginStart());\r\n\r\n  try{\r\n      const res = await publicRequest.post('/auth/signin',customer);\r\n      dispatch(loginSuccess(res.data));\r\n  }catch(err){\r\n\r\n    dispatch(loginFailure());\r\n  }\r\n}\r\n\r\nexport const addCustomer = async (dispatch,customer)=>{\r\n  dispatch(addCustomerStart());\r\n  try{\r\n    const res = await publicRequest.post('auth/register',customer);\r\n    dispatch(addCustomerSuccessfull(res.data));\r\n\r\n  }catch(err){\r\n    dispatch(addCustomerFailure());\r\n  }\r\n}\r\n\r\nexport const signOut = async (dispatch)=>{\r\n  try{\r\n    dispatch(signOutCustomer());\r\n    window.location.href = '/';\r\n  }catch{}\r\n}\r\n\r\nexport const resetCustomerCart = async (dispatch)=>{\r\n  try{\r\n       dispatch(resetCart());\r\n  }catch{}\r\n}\r\n\r\nexport const getOrders = async (dispatch,userId)=>{\r\n\r\n    dispatch(getOrderStart())\r\n  try{\r\n        const res = await userRequest.get('orders/find/'+ userId);\r\n        dispatch(getOrderSuccess(res.data));\r\n  }catch{\r\n    dispatch(getOrderFailure());\r\n  }\r\n}\r\n\r\nexport const updateOrder = async (id,order,dispatch)=>{\r\n\r\n  dispatch(updateOrderStart());\r\n  try{\r\n\r\n    const res = await userRequest.post('',order)\r\n\r\n  }catch{\r\n    dispatch(updateOrderFailure());\r\n  }\r\n}\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,eAAe,EAAEC,aAAa,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,gBAAgB,QAAQ,cAAc;AACpH,SAASC,kBAAkB,EAAEC,gBAAgB,EAAEC,sBAAsB,EAAEC,YAAY,EAAEC,UAAU,EAAEC,YAAY,EAAEC,eAAe,QAAQ,aAAa;AAEnJ,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAACC,QAAQ,KAAG;EAC9CD,QAAQ,CAACJ,UAAU,CAAC,CAAC,CAAC;EAEtB,IAAG;IACC,MAAMM,GAAG,GAAG,MAAMlB,aAAa,CAACmB,IAAI,CAAC,cAAc,EAACF,QAAQ,CAAC;IAC7DD,QAAQ,CAACH,YAAY,CAACK,GAAG,CAACE,IAAI,CAAC,CAAC;EACpC,CAAC,QAAMC,GAAG,EAAC;IAETL,QAAQ,CAACL,YAAY,CAAC,CAAC,CAAC;EAC1B;AACF,CAAC;AAED,OAAO,MAAMW,WAAW,GAAG,MAAAA,CAAON,QAAQ,EAACC,QAAQ,KAAG;EACpDD,QAAQ,CAACP,gBAAgB,CAAC,CAAC,CAAC;EAC5B,IAAG;IACD,MAAMS,GAAG,GAAG,MAAMlB,aAAa,CAACmB,IAAI,CAAC,eAAe,EAACF,QAAQ,CAAC;IAC9DD,QAAQ,CAACN,sBAAsB,CAACQ,GAAG,CAACE,IAAI,CAAC,CAAC;EAE5C,CAAC,QAAMC,GAAG,EAAC;IACTL,QAAQ,CAACR,kBAAkB,CAAC,CAAC,CAAC;EAChC;AACF,CAAC;AAED,OAAO,MAAMe,OAAO,GAAG,MAAOP,QAAQ,IAAG;EACvC,IAAG;IACDA,QAAQ,CAACF,eAAe,CAAC,CAAC,CAAC;IAC3BU,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC5B,CAAC,OAAK,CAAC;AACT,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOX,QAAQ,IAAG;EACjD,IAAG;IACEA,QAAQ,CAACd,SAAS,CAAC,CAAC,CAAC;EAC1B,CAAC,OAAK,CAAC;AACT,CAAC;AAED,OAAO,MAAM0B,SAAS,GAAG,MAAAA,CAAOZ,QAAQ,EAACa,MAAM,KAAG;EAE9Cb,QAAQ,CAACZ,aAAa,CAAC,CAAC,CAAC;EAC3B,IAAG;IACG,MAAMc,GAAG,GAAG,MAAMjB,WAAW,CAAC6B,GAAG,CAAC,cAAc,GAAED,MAAM,CAAC;IACzDb,QAAQ,CAACX,eAAe,CAACa,GAAG,CAACE,IAAI,CAAC,CAAC;EACzC,CAAC,OAAK;IACJJ,QAAQ,CAACb,eAAe,CAAC,CAAC,CAAC;EAC7B;AACF,CAAC;AAED,OAAO,MAAM4B,WAAW,GAAG,MAAAA,CAAOC,EAAE,EAACC,KAAK,EAACjB,QAAQ,KAAG;EAEpDA,QAAQ,CAACT,gBAAgB,CAAC,CAAC,CAAC;EAC5B,IAAG;IAED,MAAMW,GAAG,GAAG,MAAMjB,WAAW,CAACkB,IAAI,CAAC,EAAE,EAACc,KAAK,CAAC;EAE9C,CAAC,OAAK;IACJjB,QAAQ,CAACV,kBAAkB,CAAC,CAAC,CAAC;EAChC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}