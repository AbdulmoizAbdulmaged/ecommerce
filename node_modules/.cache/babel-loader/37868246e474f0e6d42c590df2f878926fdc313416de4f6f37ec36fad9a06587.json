{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"Customer\",\n  initialState: {\n    currentCustomer: [],\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = true;\n      state.currentCustomer = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    addCustomerStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    addCustomerSuccessfull: (state, action) => {\n      state.isFetching = true;\n      state.currentCustomer = action.payload;\n    },\n    addCustomerFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    signOut: state => {\n      state.currentCustomer = [];\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  addCustomerStart,\n  addCustomerSuccessfull,\n  addCustomerFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","currentCustomer","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","addCustomerStart","addCustomerSuccessfull","addCustomerFailure","signOut","actions","reducer"],"sources":["C:/Users/Abdu/OneDrive/Desktop/React/my-ecommerce/src/redux/userRedux.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"Customer\",\r\n  initialState: {\r\n    currentCustomer: [],\r\n    isFetching: false,\r\n    error: false\r\n  },\r\n  reducers:{\r\n    loginStart:(state)=>{\r\n      state.isFetching = true;\r\n    },\r\n    loginSuccess:(state,action)=>{\r\n      state.isFetching = true;\r\n      state.currentCustomer = action.payload;\r\n    },\r\n    loginFailure:(state)=>{\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n    addCustomerStart: (state)=>{\r\n      state.isFetching = true;\r\n      state.error = false;\r\n    },\r\n    addCustomerSuccessfull: (state,action)=>{\r\n      state.isFetching = true;\r\n      state.currentCustomer = action.payload;\r\n    },\r\n    addCustomerFailure: (state)=>{\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n    signOut: (state)=>{\r\n      state.currentCustomer = []\r\n    }\r\n    }\r\n  }\r\n);\r\n\r\nexport const {loginStart,loginSuccess,loginFailure,addCustomerStart,addCustomerSuccessfull,addCustomerFailure} = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,eAAe,EAAE,EAAE;IACnBC,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAC;IACPC,UAAU,EAAEC,KAAK,IAAG;MAClBA,KAAK,CAACJ,UAAU,GAAG,IAAI;IACzB,CAAC;IACDK,YAAY,EAACA,CAACD,KAAK,EAACE,MAAM,KAAG;MAC3BF,KAAK,CAACJ,UAAU,GAAG,IAAI;MACvBI,KAAK,CAACL,eAAe,GAAGO,MAAM,CAACC,OAAO;IACxC,CAAC;IACDC,YAAY,EAAEJ,KAAK,IAAG;MACpBA,KAAK,CAACJ,UAAU,GAAG,KAAK;MACxBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACpB,CAAC;IACDQ,gBAAgB,EAAGL,KAAK,IAAG;MACzBA,KAAK,CAACJ,UAAU,GAAG,IAAI;MACvBI,KAAK,CAACH,KAAK,GAAG,KAAK;IACrB,CAAC;IACDS,sBAAsB,EAAEA,CAACN,KAAK,EAACE,MAAM,KAAG;MACtCF,KAAK,CAACJ,UAAU,GAAG,IAAI;MACvBI,KAAK,CAACL,eAAe,GAAGO,MAAM,CAACC,OAAO;IACxC,CAAC;IACDI,kBAAkB,EAAGP,KAAK,IAAG;MAC3BA,KAAK,CAACJ,UAAU,GAAG,KAAK;MACxBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACpB,CAAC;IACDW,OAAO,EAAGR,KAAK,IAAG;MAChBA,KAAK,CAACL,eAAe,GAAG,EAAE;IAC5B;EACA;AACF,CACF,CAAC;AAED,OAAO,MAAM;EAACI,UAAU;EAACE,YAAY;EAACG,YAAY;EAACC,gBAAgB;EAACC,sBAAsB;EAACC;AAAkB,CAAC,GAAGf,SAAS,CAACiB,OAAO;AAClI,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}